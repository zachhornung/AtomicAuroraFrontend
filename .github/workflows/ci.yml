---
name: Cypress Tests
on: push
jobs:
  install:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cypress install
        uses: cypress-io/github-action@v6
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: dist
  cypress-run:
    services:
      django:
        image: us-west2-docker.pkg.dev/atomic-aurora/atomic-aurora/atomic-aurora-backend
        credentials:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        env:
          USE_DOCKER: 'yes'
          IPYTHONDIR: /app/.ipython
          REDIS_URL: redis://redis:6379/0
          CELERY_FLOWER_USER: debug
          CELERY_FLOWER_PASSWORD: debug
          GOOGLE_REDIRECT_URL: http://localhost:5173
        ports:
          - 8000:8000
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
      redis:
        image: redis
      mailpit:
        image: axllent/mailpit:v1.8
        ports:
          - 8025:8025
    runs-on: ubuntu-22.04
    container:
      image: cypress/browsers
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          # group: UI-Chrome
          # start: npm run test
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install linter
        run: npm install
      - name: Run linters
        run: npm run lint
